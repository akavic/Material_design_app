package com.victor.bobby_000_.peak_mindmap;

import android.support.v4.app.Fragment;
import android.content.Context;
import android.graphics.Typeface;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import android.widget.Toast;



/**
 * Created by bobby_000 on 05/03/2018.
 */
// whenever create a class that inherits a fragments  it needs to overide oncreateview; then you need to assign the view to the corresponding xml file in this case it's top_section_fragment

public class TopSectionFragment extends Fragment{

    private View view;
    TopsectionListner mTopsectionListner; //need to instantiate the interface here so i set the implementation of the selectpos method

        //commuincate betwenn activites with interface

    public interface TopsectionListner{
        void selectpos(int pos);
        //pass the value of the the position selected to the mainactivity then it's passed to the second fragment which can then display which map to show

    }

    @Override
    public void onAttach(Context context) {
        super.onAttach(context);
        //this method get's called whenever you attach the fragment to the activity
        try {
            mTopsectionListner =(TopsectionListner) getActivity();


        }catch (ClassCastException  e){
            throw new ClassCastException(getActivity().toString());

        }
    }

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, Bundle savedInstanceState) {
         view =inflater.inflate(R.layout.top_section_fragment,container,false);
        setfont();
        setstate();
        return view;


    }

    void setfont()
    {
        //jsut setting the fonts for the edit tesxt
        Typeface custom_font_gtlight=Typeface.createFromAsset(getActivity().getAssets(),"GothamSSm-Light.ttf");
        Typeface custom_font_gtmedium=Typeface.createFromAsset(getActivity().getAssets(),"GothamSSm-Medium.ttf");
        TextView peak_brainmap=(TextView) view.findViewById(R.id.peak_brainmap);
        TextView review_txt=(TextView) view.findViewById(R.id.review_txt);
        TextView reviewtxt_2=(TextView) view.findViewById(R.id.review_txt_2);
        TextView peak_brainmapscore=(TextView) view.findViewById(R.id.peakbrainscore);
        //being applied here
        peak_brainmap.setTypeface(custom_font_gtmedium);
        review_txt.setTypeface(custom_font_gtlight);
        reviewtxt_2.setTypeface(custom_font_gtlight);
        peak_brainmapscore.setTypeface(custom_font_gtlight);
    }


    void setstate(){
        //this function identifies which ioption has been clicked then the pos number is returned to the mainactvity which then transfers the info to the bottomsection fragment

        MultiStateToggleButton mtsb = (MultiStateToggleButton) view.findViewById(R.id.mstb_multi_id);
        //mtsb.enableMultipleChoice(true);
        mtsb.setColorRes(R.color.toogle,R.color.button_primary_color); //background, text
        mtsb.setOnValueChangedListener(new ToggleButton.OnValueChangedListener() {
            @Override
            public void onValueChanged(int value) {
               // Log.d("Value: ", String.valueOf(+ value));

                if(value==0){
                    Toast.makeText(getActivity(),
                            "return 1", Toast.LENGTH_LONG).show();
                    //tell mainactivity that the option on pos 0 has been clicked
                    mTopsectionListner.selectpos(0);

                }else if(value==1){
                    Toast.makeText(getActivity(),
                            "return 2", Toast.LENGTH_LONG).show();
                    //tell mainactivity that the option on pos 1 has been clicked
                    mTopsectionListner.selectpos(1);


                }
                else if(value ==2){
                    Toast.makeText(getActivity(),
                            "return 3", Toast.LENGTH_LONG).show();
                    //tell mainactivity that the option on pos 0 has been clicked
                    mTopsectionListner.selectpos(2);


                }
            }
        });
    }


}


///bottom fragment

package com.victor.bobby_000_.peak_mindmap;

import android.support.v4.app.Fragment;
import android.graphics.Color;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Toast;

import com.github.mikephil.charting.charts.RadarChart;
import com.github.mikephil.charting.data.Entry;
import com.github.mikephil.charting.data.RadarData;
import com.github.mikephil.charting.data.RadarDataSet;

import java.util.ArrayList;

/**
 * Created by bobby_000 on 05/03/2018.
 */
//this clas will deal with the radarchart

public class BottomSectionFragment extends Fragment {

    private RadarChart mRadarChart;
    private View view;
    private int setpos;
    private  ArrayList< Entry> data;
    private RadarDataSet dataset_;
    private  ArrayList<String> labels;



    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, Bundle savedInstanceState) {
        view =inflater.inflate(R.layout.bottom_layout_fragment,container,false);
        setRadarChart();
        return view;

    }

    public void setshapeoption(int pos){
        //postion of the map to be displayed is here e.g display you would be ==0...dipslay age group ==1 and profession would be equal to ==2
        setpos=pos;
        hasposchanged();
        Log.d("SETPOS1", String.valueOf(+setpos));
    }

    ArrayList<Entry> setdata()
    {
        //return the data for the position selected
        //creating an arraylist that will hold the value of the three different values you,age group and profession and return the one depending on which is clicked
        data= new ArrayList<>();
        if(setpos==0){
            data.add(new Entry(4f,0));
            data.add(new Entry(5f,3));
            data.add(new Entry(2f,2));
            data.add(new Entry(7f,3));
            data.add(new Entry(6f,4));
            data.add(new Entry(5f,3));
            return data;

        }else if(setpos==1)
        {
            data.add(new Entry(4f,0));
            data.add(new Entry(7f,1));
            data.add(new Entry(4f,2));
            data.add(new Entry(6f,3));
            data.add(new Entry(2f,4));
            data.add(new Entry(5f,5));

            return data;

        }else if(setpos==2){

            data.add(new Entry(6f,0));
            data.add(new Entry(3f,1));
            data.add(new Entry(2f,2));
            data.add(new Entry(5f,3));
            data.add(new Entry(1f,4));
            data.add(new Entry(9f,5));

            return data;

        }
       return  null;
    }
    public void setradarcolour(){
        //set different clours for each map
        if(setpos==0){
            dataset_.setColor(Color.CYAN);
        }else if (setpos==1){
            dataset_.setColor(Color.RED);
        }else if (setpos==2){
            dataset_.setColor(Color.GREEN);
        }

    }
    public void setlabels()
    {
        //set the labels of the graph
        labels.add("Peak Brain Score");
        labels.add("Memory");
        labels.add("Problem Solving");
        labels.add("Languages");
        labels.add("Mental Agility");
        labels.add("Focus");
    }

    void hasposchanged() {
        //redraw if pos has changed by checking the current pos vs the old one then redraw chart
        //todo but it doesn'tchange dynamically for some strange reason
        int tmp = 0;
        if (tmp != setpos) {
            tmp = setpos;
            setRadarChart();
        }
        if (tmp == setpos) {
            //do nothing
        }
    }
    void setRadarChart()
    {
        //this functions print the radar chart
        //If you want to refresh the data set values use the invalidate() function of Radar Chart
        //mRadarChart.invalidate()
        //if you want to animate the chart run mRadarChart.animate()
        //mRadarChart.animate();
        Log.d("SETPOS2", String.valueOf(+setpos));
        mRadarChart = (RadarChart) view.findViewById(R.id.radarchart);
        labels = new ArrayList<>();
        // the data stored inn here is the corresponding to the pos choice of the chooser
        ArrayList<Entry> datatodisplay = setdata();
        //now need to create an object of radarset and pass entries
        dataset_ =new RadarDataSet(datatodisplay,"");
        setradarcolour(); //set the colour for each map
        //Use setDrawFilled() method of RadarDataSet object to set whether you want to filled the whole start-shaped data set with the specified color or not.
        dataset_.setDrawFilled(true);
        //3.10 Creating an ArrayList to add the DataSet
        ArrayList <RadarDataSet> datasetstore = new ArrayList<>();
        datasetstore.add(dataset_); //data is stored ub datastore
        setlabels(); //labels for the radar chart is set
        //Now create the object of RadarData and pass the data to it anlong with the label
        RadarData data = new RadarData(labels,datasetstore);
        mRadarChart.setTouchEnabled(false); //stop user from being able to click chart

        mRadarChart.setData(data); //the mradar chart now display the data
        Log.d("SETPOS3", String.valueOf(+setpos));


    }



}

//main actvity

package com.victor.bobby_000_.peak_mindmap;


import android.support.v7.app.ActionBar;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;

//has to implement topsection so classs can call selectpos and retrive the data from it
public class MainActivity extends AppCompatActivity implements TopSectionFragment.TopsectionListner {


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        getSupportActionBar().setDisplayOptions(ActionBar.DISPLAY_SHOW_CUSTOM);
        getSupportActionBar().setCustomView(R.layout.abs_layout);

    }


    @Override
    public void selectpos(int pos) {
        // the position selected from the top section get's passed through cuase of the interface
        //this value is then passed onto the second fragment by the shareoption() methods which takes the pos as a parameter

        BottomSectionFragment Frag = (BottomSectionFragment) getSupportFragmentManager().findFragmentById(R.id.bottomsection);

        Frag.setshapeoption(pos);
    }
}


//slider info

        overridePendingTransition(R.anim.slide_in_right,R.anim.slide_out_left); //method to use transition must pass in transition xml maually check styles .xm toi see how it's been applied to whole phone
